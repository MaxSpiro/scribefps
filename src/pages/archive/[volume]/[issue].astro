---
import Layout from 'components/Layout.astro';
import PageFlipper from 'components/PageFlipper';
import { client, getUrlByRef } from 'lib/sanityClient';
export async function getStaticPaths() {
  const volumeData = await client.fetch(`*[_type == "volumes"]`);
  const volumes: any[] = await Promise.all(
    volumeData[0].volumes.map(async (volume: any) => {
      const issues = await Promise.all(
        volume.issues.map(async (issue: any) => {
          const pages: any[] =
            issue.pages &&
            (await Promise.all(
              issue.pages.map(async (page: any) => {
                return {
                  pageNumber: page.pageNumber,
                  pageUrl: await getUrlByRef(page.pageImage.asset._ref),
                };
              })
            ));
          return {
            name: issue.issueName,
            number: issue.issueNumber,
            coverUrl: await getUrlByRef(issue.cover.asset._ref),
            pages: pages ?? [],
          };
        })
      );
      return {
        number: volume.volumeNumber,
        years: volume.volumeYears,
        issues,
      };
    })
  );
  const paths: any[] = [];
  volumes.forEach((volume) => {
    volume.issues.forEach((issue: any) => {
      paths.push({
        params: {
          volume: volume.number.toString(),
          issue: issue.number.toString(),
        },
        props: {
          volumeNumber: volume.number,
          issueNumber: issue.number,
          pages: issue.pages,
          numPages: issue.pages.length,
        },
      });
    });
  });
  return paths;
}

const { volumeNumber, issueNumber, numPages } = Astro.props;
const pages = (Astro.props.pages as any[]).sort((a, b) => a.pageNumber - b.pageNumber);
---

<Layout title={`Issue ${issueNumber}`}>
  <div class='bg-gray-700 flex flex-col items-center p-6 min-h-screen'>
    <h1 class='text-white text-3xl md:text-4xl lg:text-5xl xl:text-6xl'>
      Volume {volumeNumber.toUpperCase()} - Issue {issueNumber}
    </h1>

    {
      numPages === 0 ? (
        <h1 class='mt-6 text-4xl text-white'>We couldn't find any pages, try again later!</h1>
      ) : (
        <PageFlipper client:visible volume={volumeNumber} issue={issueNumber} pages={pages} numPages={numPages} />
      )
    }
  </div>
</Layout>
